
name: Composite action to generate the matrix of targets to build packages for.
description: Remove any duplication of this information so we only have to update in one place.

inputs:
  target:
    description: Override to build a single target for debug/test only.
    required: false
  fluent-bit-version:
    description: The version of Fluent Bit to build.
    required: false
    default: 'master'
outputs:
  build-matrix:
    description: The build matrix we have created.
    value: ${{ steps.set-matrix.outputs.matrix }}
runs:
  using: "composite"
  steps:
    - name: master/1.9 targets
      if: inputs.fluent-bit-version != '1.8'
      run: |
        matrix=$((
          echo '{ "distro" : ['
          echo '"amazonlinux/2", "amazonlinux/2.arm64v8",'
          echo '"centos/7", "centos/7.arm64v8", "centos/8", "centos/8.arm64v8",'
          echo '"debian/buster", "debian/buster.arm64v8", "debian/bullseye", "debian/bullseye.arm64v8",'
          echo '"ubuntu/16.04", "ubuntu/18.04", "ubuntu/20.04", "ubuntu/18.04.arm64v8", "ubuntu/20.04.arm64v8",'
          echo '"raspbian/buster", "raspbian/bullseye"'
          echo ']}'
        ) | jq -c .)
        if [ -n "${{ inputs.target || '' }}" ]; then
          echo "Overriding matrix to build: ${{ inputs.target }}"
          matrix=$((
            echo '{ "distro" : ['
            echo '"${{ inputs.target }}"'
            echo ']}'
          ) | jq -c .)
        fi
        echo "MATRIX=$matrix" >> $GITHUB_ENV
      shell: bash

    - name: 1.8 targets
      if: inputs.fluent-bit-version == '1.8'
      run: |
        matrix=$((
          echo '{ "distro" : ['
          echo '"amazonlinux/2", "amazonlinux/2.arm64v8",'
          echo '"centos/7", "centos/7.arm64v8",'
          echo '"debian/stretch", "debian/stretch.arm64v8", "debian/buster", "debian/buster.arm64v8",'
          echo '"ubuntu/16.04", "ubuntu/18.04", "ubuntu/20.04", "ubuntu/18.04.arm64v8", "ubuntu/20.04.arm64v8",'
          echo '"raspbian/buster"'
          echo ']}'
        ) | jq -c .)
        if [ -n "${{ inputs.target || '' }}" ]; then
          echo "Overriding matrix to build: ${{ inputs.target }}"
          matrix=$((
            echo '{ "distro" : ['
            echo '"${{ inputs.target }}"'
            echo ']}'
          ) | jq -c .)
        fi
        echo "MATRIX=$matrix" >> $GITHUB_ENV
      shell: bash

    - id: set-matrix
      run: |
        echo $MATRIX
        echo $MATRIX| jq .
        echo "::set-output name=matrix::$MATRIX"
      shell: bash
