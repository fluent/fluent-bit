name: Composite action to generate the matrix of targets to build packages for.
description: Remove any duplication of this information so we only have to update in one place.

# Remember to add any new checks and target creation required.
# For example, when 2.0 comes out we should detect it and add any target changes.

inputs:
  target:
    description: Override to build a single target for debug/test only.
    required: false
    default: ""
  ref:
    description: The commit, tag or branch of Fluent Bit to checkout for building we then use to determine version for.
    required: true
outputs:
  build-matrix:
    description: The build matrix we have created.
    value: ${{ steps.set-matrix.outputs.matrix }}
runs:
  using: "composite"
  steps:
    - name: Checkout code for version check
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.ref }}
        path: version-check

    - name: Determine target type
      id: determine-build-type
      run: |
        BUILD_TYPE="1.9"
        if [[ -f "packaging/build-config.json" ]]; then
          BUILD_TYPE="2.0"
        fi
        echo "Detected type: $BUILD_TYPE"
        echo ::set-output name=BUILD_TYPE::$BUILD_TYPE
      shell: bash
      working-directory: version-check

    - name: 2.0 targets
      if: steps.determine-build-type.outputs.BUILD_TYPE == '2.0'
      run: |
        matrix=$(echo '{ "distro" : '$(jq -cr '.linux_targets' packaging/build-config.json)'}'|jq -c .)
        echo "MATRIX=$matrix" >> $GITHUB_ENV
      shell: bash

    - name: 1.9 targets
      if: steps.determine-build-type.outputs.BUILD_TYPE == '1.9'
      run: |
        matrix=$((
          echo '{ "distro" : ['
          echo '"amazonlinux/2", "amazonlinux/2.arm64v8",'
          echo '"centos/7", "centos/7.arm64v8", "centos/8", "centos/8.arm64v8",'
          echo '"debian/buster", "debian/buster.arm64v8", "debian/bullseye", "debian/bullseye.arm64v8",'
          echo '"ubuntu/16.04", "ubuntu/18.04", "ubuntu/20.04", "ubuntu/22.04",'
          echo '"ubuntu/18.04.arm64v8", "ubuntu/20.04.arm64v8", "ubuntu/22.04.arm64v8",'
          echo '"raspbian/buster", "raspbian/bullseye"'
          echo ']}'
        ) | jq -c .)
        echo "MATRIX=$matrix" >> $GITHUB_ENV
      shell: bash

    - name: Manual override of target
      if: inputs.target != ''
      run: |
        if [ -n "${{ inputs.target || '' }}" ]; then
          echo "Overriding matrix to build: ${{ inputs.target }}"
          matrix=$((
            echo '{ "distro" : ['
            echo '"${{ inputs.target }}"'
            echo ']}'
          ) | jq -c .)
        fi
        echo "MATRIX=$matrix" >> $GITHUB_ENV
      shell: bash

    - id: set-matrix
      run: |
        echo $MATRIX
        echo $MATRIX| jq .
        echo "::set-output name=matrix::$MATRIX"
      shell: bash
