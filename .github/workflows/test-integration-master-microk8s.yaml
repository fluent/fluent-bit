name: Integration tests for master on microk8s
on:
  push:
    branches:
      - master
jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup environment
        run: |
          sudo apt-get --yes update
          sudo apt-get install --yes docker.io containerd runc
          sudo systemctl unmask docker && sudo systemctl start docker

      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker images for master branch
        run: docker build --no-cache -f ./dockerfiles/Dockerfile.${{ env.arch }}-master -t ${{ env.dockerhub_organization }}/fluent-bit:${{ env.arch }}-master .
        env:
          arch: x86_64
          dockerhub_organization: ${{ secrets.DOCKERHUB_DEV_ORGANIZATION }}

      - name: Push master image to Docker Hub
        run: docker push ${{ env.dockerhub_organization }}/fluent-bit:${{ env.arch }}-master
        env:
          arch: x86_64
          dockerhub_organization: ${{ secrets.DOCKERHUB_DEV_ORGANIZATION }}

  run-integration:
    needs: docker_build
    name: run-integration on ${{ matrix.k8s-release }}
    strategy:
      max-parallel: 48
      fail-fast: true
      matrix:
        k8s-release: [ 1.20/stable ] #, 1.19/stable, 1.18/stable ]
    runs-on: ubuntu-latest
    steps:
      - name: Configure LXD
        run: |
          sudo snap install lxd
          sudo lxd.migrate -yes || true
          sudo lxd waitready
          sudo lxd init --auto
          sudo usermod -a -G lxd ${USER}
          sudo groupadd --force --system lxd
          sudo usermod --append --groups lxd ${USER}
          newgrp lxd
          sudo newgrp lxd
          sudo systemctl start snap.lxd.daemon.service
          sudo systemctl status snap.lxd.daemon.service
          sudo systemctl start snap.lxd.daemon.unix.socket
          sudo systemctl status snap.lxd.daemon.unix.socket
          sudo chmod 0777 /var/snap/lxd/common/lxd/unix.socket

      - uses: actions/checkout@v2
        with:
          repository: calyptia/fluent-bit-ci
          path: ci

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: ci/terraform/microk8s/

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ci/terraform/microk8s/

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ci/terraform/microk8s/

      - name: Terraform Apply
        id: apply
        run: |
          newgrp lxd
          terraform apply -input=false -auto-approve -var k8s-version=${{ env.k8s_release }}
        working-directory: ci/terraform/microk8s/
        env:
          k8s_release: ${{ matrix.k8s-release }}

      - run: lxc exec mk8s-node-integration-0 -- microk8s enable dns
      - run: lxc exec mk8s-node-integration-0 -- microk8s enable storage

      - uses: actions/setup-go@v2
        with:
          go-version: '1.15' # The Go version to download (if necessary) and use.

      - uses: azure/setup-helm@v1
        id: install

      - run: go mod download
        working-directory: ci/integration/

      - run: make integration
        env:
          IMAGE_REPOSITORY: ${{ secrets.DOCKERHUB_DEV_ORGANIZATION }}/fluent-bit
          IMAGE_TAG: x86_64-master
        working-directory: ci/
