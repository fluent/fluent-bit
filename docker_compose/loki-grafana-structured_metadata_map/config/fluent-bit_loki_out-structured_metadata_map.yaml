service:
  log_level: info

pipeline:
  inputs:
    - name: dummy
      tag: logs
      dummy: |
        {
          "message": "simple log generated",
          "logger": "my.logger",
          "level": "INFO",
          "hostname": "localhost",
          "my_map_of_attributes_1": {
            "key_1": "hello, world!",
            "key_2": "goodbye, world!"
          },
          "my_map_of_maps_1": {
            "root_key": {
              "sub_key_1": "hello, world!",
              "sub_key_2": "goodbye, world!"
            }
          },
          "an_unknown_key": "hello, world!",
          "another_unknown_key": "goodbye, world!"
        }

  filters:
    - name: nest
      match: logs
      nest_under: nested_for_structured_metadata
      wildcard: '*'
      wildcard_exclude:
        - message
        - logger
        - hostname
        - level
        - 'my_map_of_*'

  outputs:
    - name: loki
      match: logs
      host: loki
      remove_keys: hostname,my_map_of_attributes_1,my_map_of_maps_1
      label_keys: $level,$logger
      labels: service_name=test
      structured_metadata: $hostname
      structured_metadata_map_keys: $my_map_of_attributes_1,$my_map_of_maps_1['root_key'],$nested_for_structured_metadata
      line_format: key_value
      drop_single_key: on
