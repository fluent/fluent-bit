# Macro to set definitions
macro(FLB_DEFINITION var)
  add_definitions(-D${var})
  set(FLB_BUILD_FLAGS "${FLB_BUILD_FLAGS}#ifndef ${var}\n#define ${var}\n#endif\n")
  set(FLB_INFO_FLAGS "${FLB_INFO_FLAGS} ${var}")
endmacro()

macro(FLB_OPTION option value)
  set(${option} ${value} CACHE INTERNAL "" FORCE)
endmacro()

macro(FLB_OPTION_SYSTEM_LIB lib)
  if(DEFINED FLB_USE_SYSTEM_${lib})
    if(FLB_USE_SYSTEM_${lib})
      set(FLB_USE_SYSTEM_${lib} ON)
    else()
      set(FLB_USE_SYSTEM_${lib} OFF)
    endif()
  elseif(DEFINED FLB_USE_SYSTEM_LIBRARIES)
    set(FLB_USE_SYSTEM_${lib} "${FLB_USE_SYSTEM_LIBRARIES}")
  else()
    set(FLB_USE_SYSTEM_${lib} OFF)
  endif()
endmacro()

macro(FLB_FORCE_PKG_CONFIG_LIB lib)
  find_package(PkgConfig REQUIRED)
  string(REPLACE "-" "_" _flb_pc_lib ${lib})
  pkg_check_modules(${_flb_pc_lib} REQUIRED ${lib})
  add_library(lib${_flb_pc_lib} INTERFACE IMPORTED GLOBAL)
  set_target_properties(lib${_flb_pc_lib}
    PROPERTIES IMPORTED_LOCATION
    ${${_flb_pc_lib}_LIBRARIES})
  foreach(_flb_pc_cflags IN LISTS ${${_flb_pc_lib}_CFLAGS})
    list(APPEND CMAKE_C_FLAGS ${_flb_pc_cflags})
  endforeach()
  unset(_flb_pc_cflags)
  include_directories(${${_flb_pc_lib}_INCLUDE_DIRS})
  foreach(_flb_pc_ldflags IN LISTS ${${_flb_pc_lib}_LDFLAGS})
    list(APPEND CMAKE_EXE_LINKER_FLAGS ${_flb_pc_ldflags})
  endforeach()
  unset(_flb_pc_ldflags)
  link_libraries(${${_flb_pc_lib}_LIBRARIES})
  unset(_flb_pc_lib)
endmacro()
