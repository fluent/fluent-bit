name: Build PR(s) and master branch.
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [opened, reopened, synchronize]
jobs:
  build-windows:
    name: Build sources on amd64 for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, windows-2019]
    steps:
      - uses: actions/checkout@v3
      - name: Build on ${{ matrix.os }} with vs-2019
        run: |
          .\scripts\win_build.bat
      - name: Run unit tests.
        run: |
          ctest --rerun-failed --output-on-failure -C Debug --test-dir .\tests\

  build-centos:
    name: CentOS 7 build to confirm no issues once used downstream
    runs-on: ubuntu-latest
    container: centos:7
    steps:
      - name: Set up base image dependencies
        run: |
          yum -y update && \
          yum install -y rpm-build curl ca-certificates gcc gcc-c++ cmake make bash \
                        wget unzip systemd-devel wget flex bison \
                        cyrus-sasl-lib cyrus-sasl-devel openssl openss-libs openssl-devel \
                        postgresql-libs postgresql-devel postgresql-server postgresql && \
          wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \
          rpm -ivh epel-release-latest-7.noarch.rpm && \
          yum install -y cmake3

      - uses: actions/checkout@v3

      - name: Run compilation
        run: |
          cmake3 -DCMT_TESTS=on -DCMT_DEV=on .
          make

  build-unix-arm64:
    name: Build sources on arm64 for ${{ matrix.os }} - ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        compiler: [ gcc, clang ]
    steps:
      - uses: actions/checkout@v3
      - name: Build on ${{ matrix.os }} with ${{ matrix.compiler }}
        uses: uraimo/run-on-arch-action@v2.1.1
        with:
          arch: aarch64
          distro: ubuntu20.04
          run: |
            apt-get update && \
            apt-get install -y --no-install-recommends \
            build-essential \
            cmake \
            file \
            make 
            export CC=${{ env.compiler }}
            cmake -DCMT_TESTS=On .
            make all
            CTEST_OUTPUT_ON_FAILURE=1 make test
        env:
          CC: ${{ matrix.compiler }}
  build-unix-amd64:
    name: Build sources on amd64 for ${{ matrix.os }} - ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [ gcc, clang ]
    steps:
      - uses: actions/checkout@v3
      - name: Build on ${{ matrix.os }} with ${{ matrix.compiler }}
        run: |
          echo "CC = $CC, CXX = $CXX"
          cmake -DCMT_TESTS=On .
          make all
          CTEST_OUTPUT_ON_FAILURE=1 make test
        env:
          CC: ${{ matrix.compiler }}
