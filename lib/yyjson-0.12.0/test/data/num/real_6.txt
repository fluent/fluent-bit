
# ==============================================================================
# From https://github.com/miloyip/nativejson-benchmark

0.0
-0.0
1.0
-1.0
1.5
-1.5
3.1416
1E10
1E+10
1E-10
-1E10
-1e10
-1E+10
-1E-10
1.234E+10
1.234E-10
1.79769e+308
2.22507e-308
-1.79769e+308
-2.22507e-308

# minimum denormal
4.9406564584124654e-324

# Max subnormal double 
2.2250738585072009e-308

# Min normal positive double
2.2250738585072014e-308

# Max double
1.7976931348623157e+308

# must underflow
1e-10000

# 2^64 (max of uint64_t + 1, force to use double)
18446744073709551616.0

# -2^63 - 1(min of int64_t + 1, force to use double)
-9223372036854775809.0

# https://github.com/miloyip/rapidjson/issues/120
0.9868011474609375

# Fast Path Cases In Disguise
123e34
45913141877270640000.0

1e-00011111111111
-1e-00011111111111

1e-214748363
1e-214748364
1e-21474836311

# Max double in another form
0.017976931348623157e+310

# http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/
2.2250738585072012e-308
2.22507385850720113605740979670913197593481954635164564e-308
2.22507385850720113605740979670913197593481954635164565e-308

# round to even
0.999999999999999944488848768742172978818416595458984375

# previous double
0.999999999999999944488848768742172978818416595458984374

# next double
0.999999999999999944488848768742172978818416595458984376

# round to even
1.00000000000000011102230246251565404236316680908203125

# previous double
1.00000000000000011102230246251565404236316680908203124

# next double
1.00000000000000011102230246251565404236316680908203126

# '1' followed by 308 '0'
100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0

# Cover trimming
2.225073858507201136057409796709131975934819546351645648023426109724822222021076945516529523908135087914149158913039621106870086438694594645527657207407820621743379988141063267329253552286881372149012981122451451889849057222307285255133155755015914397476397983411801999323962548289017107081850690630666655994938275772572015763062690663332647565300009245888316433037779791869612049497390377829704905051080609940730262937128958950003583799967207254304360284078895771796150945516748243471030702609144621572289880258182545180325707018860872113128079512233426288368622321503775666622503982534335974568884423900265498198385487948292206894721689831099698365846814022854243330660339850886445804001034933970427567186443383770486037861622771738545623065874679014086723327636718751234567890123456789012345678901e-308

# https://github.com/Tencent/rapidjson/issues/340
7.450580596923828e-9
3.725290298461914e-9
1.862645149230957e-9
9.094947017729282e-13
4.547473508864641e-13
4.440892098500626e-16
2.220446049250313e-16
3.469446951953614e-18
1.734723475976807e-18
5.421010862427522e-20
2.710505431213761e-20
1.3552527156068805e-20
8.470329472543003e-22
5.293955920339377e-23
2.0194839173657902e-28
1.0097419586828951e-28
