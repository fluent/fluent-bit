/* This is a generated file. DO NOT EDIT! */

static const FoldFunc fold_func[] = {
  fold_kfold_numarith,
  fold_kfold_numabsneg,
  fold_kfold_ldexp,
  fold_kfold_fpmath,
  fold_kfold_fpcall1,
  fold_kfold_fpcall2,
  fold_kfold_numpow,
  fold_kfold_numcomp,
  fold_kfold_intarith,
  fold_kfold_intovarith,
  fold_kfold_bnot,
  fold_kfold_bswap,
  fold_kfold_intcomp,
  fold_kfold_intcomp0,
  fold_kfold_int64arith,
  fold_kfold_int64arith2,
  fold_kfold_int64shift,
  fold_kfold_bnot64,
  fold_kfold_bswap64,
  fold_kfold_int64comp,
  fold_kfold_int64comp0,
  fold_kfold_snew_kptr,
  fold_kfold_snew_empty,
  fold_kfold_strref,
  fold_kfold_strref_snew,
  fold_kfold_strcmp,
  fold_bufput_append,
  fold_bufput_kgc,
  fold_bufstr_kfold_cse,
  fold_bufput_kfold_op,
  fold_bufput_kfold_rep,
  fold_bufput_kfold_fmt,
  fold_kfold_add_kgc,
  fold_kfold_add_kptr,
  fold_kfold_add_kright,
  fold_kfold_tobit,
  fold_kfold_conv_kint_num,
  fold_kfold_conv_kintu32_num,
  fold_kfold_conv_kint_ext,
  fold_kfold_conv_kint_i64,
  fold_kfold_conv_kint64_num_i64,
  fold_kfold_conv_kint64_num_u64,
  fold_kfold_conv_kint64_int_i64,
  fold_kfold_conv_knum_int_num,
  fold_kfold_conv_knum_u32_num,
  fold_kfold_conv_knum_i64_num,
  fold_kfold_conv_knum_u64_num,
  fold_kfold_tostr_knum,
  fold_kfold_tostr_kint,
  fold_kfold_strto,
  lj_opt_cse,
  fold_kfold_kref,
  fold_shortcut_round,
  fold_shortcut_left,
  fold_shortcut_dropleft,
  fold_shortcut_leftleft,
  fold_simplify_numadd_negx,
  fold_simplify_numadd_xneg,
  fold_simplify_numsub_k,
  fold_simplify_numsub_negk,
  fold_simplify_numsub_xneg,
  fold_simplify_nummuldiv_k,
  fold_simplify_nummuldiv_negk,
  fold_simplify_nummuldiv_negneg,
  fold_simplify_numpow_xkint,
  fold_simplify_numpow_xknum,
  fold_simplify_numpow_kx,
  fold_shortcut_conv_num_int,
  fold_simplify_conv_int_num,
  fold_simplify_conv_i64_num,
  fold_simplify_conv_int_i64,
  fold_simplify_conv_flt_num,
  fold_simplify_tobit_conv,
  fold_simplify_floor_conv,
  fold_simplify_conv_sext,
  fold_simplify_conv_narrow,
  fold_cse_conv,
  fold_narrow_convert,
  fold_simplify_intadd_k,
  fold_simplify_intmul_k,
  fold_simplify_intsub_k,
  fold_simplify_intsub_kleft,
  fold_simplify_intadd_k64,
  fold_simplify_intsub_k64,
  fold_simplify_intmul_k32,
  fold_simplify_intmul_k64,
  fold_simplify_intmod_k,
  fold_simplify_intmod_kleft,
  fold_simplify_intsub,
  fold_simplify_intsubadd_leftcancel,
  fold_simplify_intsubsub_leftcancel,
  fold_simplify_intsubsub_rightcancel,
  fold_simplify_intsubadd_rightcancel,
  fold_simplify_intsubaddadd_cancel,
  fold_simplify_band_k,
  fold_simplify_bor_k,
  fold_simplify_bxor_k,
  fold_simplify_shift_ik,
  fold_simplify_shift_andk,
  fold_simplify_shift1_ki,
  fold_simplify_shift2_ki,
  fold_simplify_shiftk_andk,
  fold_simplify_andk_shiftk,
  fold_simplify_andor_k,
  fold_simplify_andor_k64,
  fold_reassoc_intarith_k,
  fold_reassoc_intarith_k64,
  fold_reassoc_dup,
  fold_reassoc_dup_minmax,
  fold_reassoc_bxor,
  fold_reassoc_shift,
  fold_reassoc_minmax_k,
  fold_abc_fwd,
  fold_abc_k,
  fold_abc_invar,
  fold_comm_swap,
  fold_comm_equal,
  fold_comm_comp,
  fold_comm_dup,
  fold_comm_dup_minmax,
  fold_comm_bxor,
  fold_merge_eqne_snew_kgc,
  lj_opt_fwd_aload,
  fold_kfold_hload_kkptr,
  lj_opt_fwd_hload,
  lj_opt_fwd_uload,
  lj_opt_fwd_alen,
  fold_cse_uref,
  lj_opt_fwd_hrefk,
  fold_fwd_href_tnew,
  fold_fwd_href_tdup,
  fold_fload_tab_tnew_asize,
  fold_fload_tab_tnew_hmask,
  fold_fload_tab_tdup_asize,
  fold_fload_tab_tdup_hmask,
  fold_fload_tab_ah,
  fold_fload_str_len_kgc,
  fold_fload_str_len_snew,
  fold_fload_str_len_tostr,
  fold_fload_cdata_typeid_kgc,
  fold_fload_cdata_int64_kgc,
  fold_fload_cdata_typeid_cnew,
  fold_fload_cdata_ptr_int64_cnew,
  lj_opt_cse,
  lj_opt_fwd_fload,
  fold_fwd_sload,
  fold_xload_kptr,
  lj_opt_fwd_xload,
  fold_barrier_tab,
  fold_barrier_tnew_tdup,
  fold_prof,
  lj_opt_dse_ahstore,
  lj_opt_dse_ustore,
  lj_opt_dse_fstore,
  lj_opt_dse_xstore,
  lj_ir_emit
};

static const uint32_t fold_hash[1002] = {
0x0f5a741d,
0xffffffff,
0xffffffff,
0x6e4a9417,
0xffffffff,
0x634877ff,
0x8775ffff,
0xffffffff,
0xffffffff,
0x8789fc09,
0x83894008,
0xffffffff,
0x644e5fff,
0xffffffff,
0x0c0c5c17,
0x26b45e71,
0xffffffff,
0x0e52741d,
0xffffffff,
0xffffffff,
0x66429417,
0xffffffff,
0xffffffff,
0x586dffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4db4a6ae,
0x46b56a95,
0x0c045c17,
0x169dfc17,
0x2cb4728e,
0xffffffff,
0xffffffff,
0x30b85fff,
0xffffffff,
0xffffffff,
0x7765ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x37408000,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0e42741d,
0x2253fc18,
0xffffffff,
0xffffffff,
0xffffffff,
0x096e5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3468d000,
0xffffffff,
0xffffffff,
0x66429017,
0x5d54a429,
0xffffffff,
0x8f89fc04,
0xffffffff,
0xffffffff,
0xffffffff,
0x6a44881d,
0x08665c17,
0x5855ffff,
0x82754416,
0x624bfc21,
0x86894409,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0712701c,
0xffffffff,
0x6b4287ff,
0xffffffff,
0x085e5c17,
0x27b45ed4,
0xffffffff,
0x0d0bfc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9bbfffff,
0x10507417,
0xffffffff,
0xffffffff,
0x070a701c,
0x5557fc1d,
0xffffffff,
0xffffffff,
0x08565c17,
0x7645ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6844841d,
0x10487417,
0x817543ff,
0x0702701c,
0xffffffff,
0x84894009,
0xffffffff,
0x084e5c17,
0xffffffff,
0x26b45e72,
0xffffffff,
0x7f7863ff,
0x7c85fc00,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4e6dfc17,
0xffffffff,
0x6047fc1d,
0xffffffff,
0xffffffff,
0xffffffff,
0x08465c17,
0x46b56a96,
0x4bb4ae95,
0xffffffff,
0x79113818,
0x01607044,
0xffffffff,
0xffffffff,
0x1dc18c09,
0xffffffff,
0xffffffff,
0x2152681d,
0x3312741d,
0xffffffff,
0x67428817,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0064701c,
0xffffffff,
0x2253fc19,
0xffffffff,
0xffffffff,
0x9b9fffff,
0xffffffff,
0x405dfc17,
0x130a741d,
0xffffffff,
0xffffffff,
0xffffffff,
0x3468d001,
0xffffffff,
0x3213101b,
0xffffffff,
0xffffffff,
0x12407400,
0x065c701c,
0xffffffff,
0xffffffff,
0x654a8417,
0x9897ffff,
0x47b569ae,
0x5055fc17,
0x1302741d,
0x4bb4aa95,
0xffffffff,
0xffffffff,
0xffffffff,
0x2ab47675,
0xffffffff,
0xffffffff,
0x2eb472ce,
0x0054701c,
0x8a897000,
0x2152641d,
0x8b88600e,
0x69428417,
0x5c55fc29,
0x8f8fffff,
0x0a3e5c00,
0x614dfc17,
0x6e4c9817,
0xffffffff,
0xffffffff,
0x6956ac17,
0xffffffff,
0x7215ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x33106fff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5f45fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x750dffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4bb4a695,
0xffffffff,
0xffffffff,
0xffffffff,
0x3d59fc1c,
0x23b6701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x2052601d,
0xffffffff,
0x7505ffff,
0xffffffff,
0x0f5c741d,
0x3560c044,
0x44b56a8e,
0xffffffff,
0x928a6bff,
0x634a77ff,
0x9b77ffff,
0x05bd8c3b,
0x88886000,
0x4bb4ae96,
0xffffffff,
0xffffffff,
0x64505fff,
0xffffffff,
0x0c0e5c17,
0x1fc18c0a,
0xffffffff,
0x0e54741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1dc18c13,
0x736fffff,
0x19bd8c00,
0xffffffff,
0xffffffff,
0x6a468c1d,
0xffffffff,
0x63485fff,
0x2253fc1a,
0x0c065c17,
0x3311fc1b,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7767ffff,
0x3468d002,
0xffffffff,
0x6b448bff,
0x94affc00,
0x28b475d5,
0x3660bc44,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0e44741d,
0x82754418,
0xffffffff,
0x4bb4aa96,
0xffffffff,
0xffffffff,
0xffffffff,
0x4ab5fed3,
0x04bc73ff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8c88600f,
0x5b55fc2a,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7357ffff,
0xffffffff,
0x7115fc17,
0x624dfc21,
0x43b569d3,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7015fc29,
0x24b45dd3,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3b54bc1c,
0xffffffff,
0xffffffff,
0x4bb4a696,
0x9bc1ffff,
0xffffffff,
0xffffffff,
0x070c701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7847ffff,
0x49696800,
0xffffffff,
0x02627017,
0x95af4400,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x104a7417,
0xffffffff,
0xffffffff,
0x0704701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x08505c17,
0xffffffff,
0xffffffff,
0x1fc18c0b,
0x7f7a63ff,
0x7d87fc00,
0xffffffff,
0xffffffff,
0xffffffff,
0x94b1ffff,
0x1dc18c14,
0x4f6ffc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x08485c17,
0xffffffff,
0xffffffff,
0xffffffff,
0x79133818,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9ba9ffff,
0x31ba6000,
0xffffffff,
0x27b45eb3,
0xffffffff,
0x69448817,
0x29b475d6,
0xffffffff,
0xffffffff,
0x6e4e9c17,
0x95af4000,
0xffffffff,
0x0066701c,
0x45b56ace,
0xffffffff,
0xffffffff,
0xffffffff,
0x9ba1ffff,
0xffffffff,
0xffffffff,
0x130c741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8c886010,
0xffffffff,
0x3852bfff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9999ffff,
0xffffffff,
0x5457fc17,
0x1304741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x187f3bff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0056701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x67448417,
0x7e91ffff,
0x25b45dd4,
0x0b405c00,
0x614ffc17,
0x46b56a75,
0x48b7681c,
0xffffffff,
0x2bb4726e,
0xffffffff,
0x9b17ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x33126fff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9089ffff,
0xffffffff,
0x6047fc17,
0x49696801,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x750fffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6a52a41d,
0xffffffff,
0x515477ff,
0x21526817,
0xffffffff,
0xffffffff,
0xffffffff,
0x1fc18c0c,
0xffffffff,
0x575a5fff,
0xffffffff,
0xffffffff,
0x7507ffff,
0x6d468fff,
0x1dc18c15,
0x9bb20000,
0xffffffff,
0xffffffff,
0xffffffff,
0x644c77ff,
0x9479ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6c64cbff,
0xffffffff,
0xffffffff,
0xffffffff,
0x33105c17,
0xffffffff,
0x425c73ff,
0x0e56741d,
0xffffffff,
0x27b45eb4,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x634a5fff,
0xffffffff,
0x0c085c17,
0x3313fc1b,
0xffffffff,
0x21526417,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8c886011,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c005c17,
0xffffffff,
0xffffffff,
0x0e46741d,
0xffffffff,
0xffffffff,
0xffffffff,
0x8d894c0e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x46b56a76,
0x4bb4ae75,
0xffffffff,
0x096a5c17,
0xffffffff,
0xffffffff,
0x624ffc21,
0x8f89fc0e,
0xffffffff,
0x20526017,
0xffffffff,
0x33106018,
0x159c6817,
0xffffffff,
0xffffffff,
0xffffffff,
0x49696802,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3e56bc1c,
0xffffffff,
0xffffffff,
0x9bc3ffff,
0x8d89480e,
0xffffffff,
0xffffffff,
0x070e701c,
0xffffffff,
0x1fc18c0d,
0xffffffff,
0x085a5c17,
0xffffffff,
0xffffffff,
0x69468c17,
0xffffffff,
0x1ec18c16,
0xffffffff,
0x6e50a017,
0xffffffff,
0x4bb4aa75,
0x104c7417,
0x4db6a81c,
0xffffffff,
0x0706701c,
0x5253fc1d,
0x6f64c817,
0x2db472ae,
0x08525c17,
0xffffffff,
0xffffffff,
0xffffffff,
0x065c7017,
0x8f89fc00,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3953fc2f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x084a5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1babffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5e43fc1d,
0xffffffff,
0xffffffff,
0xffffffff,
0x08425c17,
0xffffffff,
0xffffffff,
0x4bb4a675,
0x4db6a41c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8e894c0f,
0xffffffff,
0xffffffff,
0x130e741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x44b56a6e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7b846800,
0xffffffff,
0x8789fc06,
0x654e8417,
0x4bb4ae76,
0x9a9bffff,
0xffffffff,
0x1306741d,
0xffffffff,
0x8f89fc0f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0058701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9793ffff,
0xffffffff,
0x6151fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6c66cfff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1fc18c0e,
0x938bffff,
0xffffffff,
0x6149fc17,
0xffffffff,
0x3f56bc2f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7411ffff,
0x4bb4aa76,
0xffffffff,
0xffffffff,
0xffffffff,
0x4ab5feb3,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x415dfc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0x8f89fc01,
0xffffffff,
0xffffffff,
0x7509ffff,
0x1aab5056,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x644e77ff,
0xffffffff,
0xffffffff,
0x3a55fc1c,
0x8275441c,
0xffffffff,
0xffffffff,
0x51545fff,
0xffffffff,
0x33125c17,
0x7501ffff,
0xffffffff,
0x0f58741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8073ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x140bfc1d,
0x4bb4a676,
0x644c5fff,
0xffffffff,
0x0c0a5c17,
0xffffffff,
0x8e894c10,
0xffffffff,
0x2ab47695,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x736bffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c025c17,
0x8789fc07,
0xffffffff,
0xffffffff,
0xffffffff,
0x26b45e6f,
0xffffffff,
0x8f89fc10,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6e489017,
0xffffffff,
0xffffffff,
0xffffffff,
0x6952a417,
0xffffffff,
0xffffffff,
0xffffffff,
0x096c5c17,
0xffffffff,
0x2fb873ff,
0x6251fc21,
0x6f66cc17,
0x9ba3fc00,
0xffffffff,
0xffffffff,
0x33126018,
0xffffffff,
0x1fc18c0f,
0xffffffff,
0xffffffff,
0xffffffff,
0x4db4aa6e,
0x89893800,
0x6842881d,
0x08645c17,
0x45b56aae,
0x7353ffff,
0x6249fc21,
0xffffffff,
0xffffffff,
0x3e58bc1c,
0xffffffff,
0xffffffff,
0x9bc5ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0710701c,
0xffffffff,
0xffffffff,
0x373e7c00,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x104e7417,
0xffffffff,
0xffffffff,
0x0708701c,
0x5355fc1d,
0xffffffff,
0xffffffff,
0x08545c17,
0x7643ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4db4a66e,
0x4cb5ffff,
0x6a42841d,
0x3c55fc2f,
0xffffffff,
0x0700701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x084c5c17,
0x6a56ac1d,
0xffffffff,
0xffffffff,
0x8e894c11,
0x7a83fc00,
0xffffffff,
0xffffffff,
0xffffffff,
0x1cadffff,
0xffffffff,
0x4e6bfc17,
0xffffffff,
0x5f45fc1d,
0xffffffff,
0xffffffff,
0xffffffff,
0x08445c17,
0x5a54abff,
0x8789fc08,
0xffffffff,
0x375ebfff,
0x015e7044,
0xffffffff,
0x26b45e70,
0xffffffff,
0x8f89fc11,
0x9ba5ffff,
0xffffffff,
0x3310741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x962bffff,
0xffffffff,
0xffffffff,
0x0062701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x65508417,
0xffffffff,
0xffffffff,
0x565bfc17,
0x1308741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3211101b,
0xffffffff,
0xffffffff,
0x113e7400,
0xffffffff,
0xffffffff,
0xffffffff,
0x65488417,
0x9795ffff,
0xffffffff,
0x4e53fc17,
0x5954a7ff,
0x1300741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0052701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x918dffff,
0xffffffff,
0x614bfc17,
0xffffffff,
0x3f58bc2f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7413ffff,
0x85894408,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5e43fc17,
0xffffffff,
0xffffffff,
0x177e6017,
0xffffffff,
0x27b45ed3,
0xffffffff,
0x750bffff,
0x036873ff,
0xffffffff,
0xffffffff,
0x4db4aaae,
0xffffffff,
0xffffffff,
0x645077ff,
0xffffffff,
0xffffffff,
0x3d57fc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c145c17,
0x7503ffff,
0xffffffff,
0xffffffff
};

#define fold_hashkey(k)	(lj_rol(lj_rol((k),21)-(k),1)%1001)

