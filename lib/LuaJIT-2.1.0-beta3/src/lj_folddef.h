/* This is a generated file. DO NOT EDIT! */

static const FoldFunc fold_func[] = {
  fold_kfold_numarith,
  fold_kfold_numabsneg,
  fold_kfold_ldexp,
  fold_kfold_fpmath,
  fold_kfold_numpow,
  fold_kfold_numcomp,
  fold_kfold_intarith,
  fold_kfold_intovarith,
  fold_kfold_bnot,
  fold_kfold_bswap,
  fold_kfold_intcomp,
  fold_kfold_intcomp0,
  fold_kfold_int64arith,
  fold_kfold_int64arith2,
  fold_kfold_int64shift,
  fold_kfold_bnot64,
  fold_kfold_bswap64,
  fold_kfold_int64comp,
  fold_kfold_int64comp0,
  fold_kfold_snew_kptr,
  fold_kfold_snew_empty,
  fold_kfold_strref,
  fold_kfold_strref_snew,
  fold_kfold_strcmp,
  fold_bufput_append,
  fold_bufput_kgc,
  fold_bufstr_kfold_cse,
  fold_bufput_kfold_op,
  fold_bufput_kfold_rep,
  fold_bufput_kfold_fmt,
  fold_kfold_add_kgc,
  fold_kfold_add_kptr,
  fold_kfold_add_kright,
  fold_kfold_tobit,
  fold_kfold_conv_kint_num,
  fold_kfold_conv_kintu32_num,
  fold_kfold_conv_kint_ext,
  fold_kfold_conv_kint_i64,
  fold_kfold_conv_kint64_num_i64,
  fold_kfold_conv_kint64_num_u64,
  fold_kfold_conv_kint64_int_i64,
  fold_kfold_conv_knum_int_num,
  fold_kfold_conv_knum_u32_num,
  fold_kfold_conv_knum_i64_num,
  fold_kfold_conv_knum_u64_num,
  fold_kfold_tostr_knum,
  fold_kfold_tostr_kint,
  fold_kfold_strto,
  lj_opt_cse,
  fold_kfold_kref,
  fold_shortcut_round,
  fold_shortcut_left,
  fold_shortcut_dropleft,
  fold_shortcut_leftleft,
  fold_simplify_numadd_negx,
  fold_simplify_numadd_xneg,
  fold_simplify_numsub_k,
  fold_simplify_numsub_negk,
  fold_simplify_numsub_xneg,
  fold_simplify_nummuldiv_k,
  fold_simplify_nummuldiv_negk,
  fold_simplify_nummuldiv_negneg,
  fold_simplify_numpow_xk,
  fold_simplify_numpow_kx,
  fold_shortcut_conv_num_int,
  fold_simplify_conv_int_num,
  fold_simplify_conv_i64_num,
  fold_simplify_conv_int_i64,
  fold_simplify_conv_flt_num,
  fold_simplify_tobit_conv,
  fold_simplify_floor_conv,
  fold_simplify_conv_sext,
  fold_simplify_conv_narrow,
  fold_cse_conv,
  fold_narrow_convert,
  fold_simplify_intadd_k,
  fold_simplify_intmul_k,
  fold_simplify_intsub_k,
  fold_simplify_intsub_kleft,
  fold_simplify_intadd_k64,
  fold_simplify_intsub_k64,
  fold_simplify_intmul_k32,
  fold_simplify_intmul_k64,
  fold_simplify_intmod_k,
  fold_simplify_intmod_kleft,
  fold_simplify_intsub,
  fold_simplify_intsubadd_leftcancel,
  fold_simplify_intsubsub_leftcancel,
  fold_simplify_intsubsub_rightcancel,
  fold_simplify_intsubadd_rightcancel,
  fold_simplify_intsubaddadd_cancel,
  fold_simplify_band_k,
  fold_simplify_bor_k,
  fold_simplify_bxor_k,
  fold_simplify_shift_ik,
  fold_simplify_shift_andk,
  fold_simplify_shift1_ki,
  fold_simplify_shift2_ki,
  fold_simplify_shiftk_andk,
  fold_simplify_andk_shiftk,
  fold_simplify_andor_k,
  fold_simplify_andor_k64,
  fold_reassoc_intarith_k,
  fold_reassoc_intarith_k64,
  fold_reassoc_dup,
  fold_reassoc_bxor,
  fold_reassoc_shift,
  fold_reassoc_minmax_k,
  fold_reassoc_minmax_left,
  fold_reassoc_minmax_right,
  fold_abc_fwd,
  fold_abc_k,
  fold_abc_invar,
  fold_comm_swap,
  fold_comm_equal,
  fold_comm_comp,
  fold_comm_dup,
  fold_comm_bxor,
  fold_merge_eqne_snew_kgc,
  lj_opt_fwd_aload,
  fold_kfold_hload_kkptr,
  lj_opt_fwd_hload,
  lj_opt_fwd_uload,
  lj_opt_fwd_tab_len,
  fold_cse_uref,
  lj_opt_fwd_hrefk,
  fold_fwd_href_tnew,
  fold_fwd_href_tdup,
  fold_fload_tab_tnew_asize,
  fold_fload_tab_tnew_hmask,
  fold_fload_tab_tdup_asize,
  fold_fload_tab_tdup_hmask,
  fold_fload_tab_ah,
  fold_fload_str_len_kgc,
  fold_fload_str_len_snew,
  fold_fload_str_len_tostr,
  fold_fload_cdata_typeid_kgc,
  fold_fload_cdata_int64_kgc,
  fold_fload_cdata_typeid_cnew,
  fold_fload_cdata_ptr_int64_cnew,
  lj_opt_cse,
  lj_opt_fwd_fload,
  fold_fwd_sload,
  fold_xload_kptr,
  lj_opt_fwd_xload,
  fold_barrier_tab,
  fold_barrier_tnew_tdup,
  fold_prof,
  lj_opt_dse_ahstore,
  lj_opt_dse_ustore,
  lj_opt_dse_fstore,
  lj_opt_dse_xstore,
  lj_ir_emit
};

static const uint32_t fold_hash[950] = {
0x5654a7ff,
0x0d58741d,
0x25b45ed4,
0x5c45fc17,
0x0e487417,
0xffffffff,
0xffffffff,
0xffffffff,
0x4b6ffc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x848bfc06,
0xffffffff,
0xffffffff,
0xffffffff,
0x7307ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3111fc1b,
0x5f4bfc21,
0x1bc18c13,
0xffffffff,
0xffffffff,
0xffffffff,
0x8c8bfc00,
0xffffffff,
0x4ab4aa6e,
0x139c6817,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4ab4a66e,
0xffffffff,
0xffffffff,
0x06485c17,
0x7bc1fc1e,
0xffffffff,
0x1dc18c0f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6744881d,
0xffffffff,
0xffffffff,
0xffffffff,
0x1dc18c0b,
0xffffffff,
0x6544841d,
0x0510701c,
0x40b569d3,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4e5477ff,
0xffffffff,
0xffffffff,
0x0064701c,
0x917bffff,
0x48b4ae95,
0xffffffff,
0x0a145c17,
0xffffffff,
0x98a5ffff,
0x47b5feb3,
0x48b4aa95,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c44741d,
0x06685c17,
0x48b4a695,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x535bfc17,
0xffffffff,
0xffffffff,
0xffffffff,
0x3d56bc2f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x31106018,
0x4e545fff,
0x0506701c,
0xffffffff,
0x3b57fc1c,
0xffffffff,
0xffffffff,
0x7547ffff,
0x29b4726e,
0x604a77ff,
0x6b66cc1c,
0xffffffff,
0x7171ffff,
0xffffffff,
0xffffffff,
0x0a0a5c17,
0xffffffff,
0x979bffff,
0x24b45e72,
0x3110741d,
0xffffffff,
0xffffffff,
0x8c8bfc10,
0x98c5ffff,
0xffffffff,
0x065e5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0x6a4a9417,
0xffffffff,
0xffffffff,
0x5e51fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x604a5fff,
0xffffffff,
0x7213ffff,
0x25b45eb4,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x624a8417,
0x28b47695,
0xffffffff,
0x7467ffff,
0xffffffff,
0xffffffff,
0x0a005c17,
0x848bfc08,
0x8c91ffff,
0xffffffff,
0x1106741d,
0x036a73ff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x06545c17,
0xffffffff,
0xffffffff,
0x5257fc1d,
0x0d5a741d,
0xffffffff,
0xffffffff,
0x5d47fc17,
0x0e4a7417,
0xffffffff,
0x8c8bfc04,
0xffffffff,
0x4c71fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7309ffff,
0x8c8bfc11,
0xffffffff,
0xffffffff,
0x466b6800,
0xffffffff,
0x3113fc1b,
0x5f4dfc21,
0x466b6802,
0x3753fc2f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x91b1ffff,
0xffffffff,
0xffffffff,
0x064a5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x48b4ae75,
0xffffffff,
0xffffffff,
0xffffffff,
0x67468c1d,
0xffffffff,
0x48b4aa75,
0x848bfc09,
0xffffffff,
0x6656ac17,
0x8a8b4c0e,
0x878b7000,
0x48b4a675,
0xffffffff,
0xffffffff,
0xffffffff,
0x8a8b480e,
0x0512701c,
0x2fba6000,
0x1cc18c16,
0xffffffff,
0xffffffff,
0xffffffff,
0x7153ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0066701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5b43fc1d,
0x0c46741d,
0xffffffff,
0xffffffff,
0xffffffff,
0x78866800,
0x8c8bfc01,
0xffffffff,
0xffffffff,
0x3e5dfc17,
0xffffffff,
0xffffffff,
0xffffffff,
0x3d58bc2f,
0x6d69fc33,
0xffffffff,
0xffffffff,
0x1dc18c0e,
0xffffffff,
0xffffffff,
0xffffffff,
0x31126018,
0x0508701c,
0xffffffff,
0xffffffff,
0x3b59fc1c,
0x6b68d01c,
0xffffffff,
0xffffffff,
0x614c77ff,
0xffffffff,
0xffffffff,
0x24b45e70,
0x7f774416,
0xffffffff,
0x98a3fc00,
0x0a0c5c17,
0x1dc18c0a,
0xffffffff,
0xffffffff,
0x3112741d,
0xffffffff,
0xffffffff,
0xffffffff,
0x6a4c9817,
0x28b47675,
0xffffffff,
0xffffffff,
0xffffffff,
0x684287ff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4b53fc17,
0xffffffff,
0x868b3800,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x614c5fff,
0x6752a41d,
0x7015ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0052701c,
0x7469ffff,
0xffffffff,
0xffffffff,
0x0a025c17,
0xffffffff,
0x9493ffff,
0x898a600f,
0x1108741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x15806017,
0x06565c17,
0x015e7045,
0xffffffff,
0xffffffff,
0x63429417,
0x0d5c741d,
0xffffffff,
0x5e49fc17,
0x0e4c7417,
0xffffffff,
0x63429017,
0x24b45e71,
0x353e7c00,
0x3011141b,
0xffffffff,
0xffffffff,
0xffffffff,
0x149dfc17,
0xffffffff,
0xffffffff,
0xffffffff,
0x730bffff,
0x64428817,
0xffffffff,
0x0f3e7400,
0xffffffff,
0xffffffff,
0xffffffff,
0x66428417,
0x5f4ffc21,
0x3a55fc2f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8b8b4c10,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x064c5c17,
0xffffffff,
0x6f15fc17,
0xffffffff,
0x0c52741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3954bc1c,
0xffffffff,
0x8f8c6bff,
0x42b56ace,
0xffffffff,
0xffffffff,
0xffffffff,
0x083e5c00,
0xffffffff,
0x3360c045,
0x1bc18c14,
0xffffffff,
0x7301ffff,
0x1f52681d,
0x326ad400,
0x3460bc45,
0x326ad402,
0x932bffff,
0xffffffff,
0x1f52641d,
0xffffffff,
0xffffffff,
0x5555ffff,
0xffffffff,
0x7785fc00,
0x1e52601d,
0x0068701c,
0x7f77441c,
0xffffffff,
0x91affc00,
0xffffffff,
0xffffffff,
0x98a9ffff,
0x828b4408,
0xffffffff,
0x06425c17,
0x466b6801,
0x0b0bfc17,
0x5c45fc1d,
0x808b4008,
0x076c5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7f774418,
0xffffffff,
0x5a54a429,
0x1dc18c0c,
0xffffffff,
0xffffffff,
0x8b8b4c11,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x22b45dd3,
0xffffffff,
0xffffffff,
0xffffffff,
0x050a701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x614e77ff,
0x44b569ae,
0xffffffff,
0x45b7681c,
0x7d75ffff,
0xffffffff,
0xffffffff,
0x0a0e5c17,
0xffffffff,
0x6a4e9c17,
0x989fffff,
0x1bc18c15,
0xffffffff,
0xffffffff,
0x68448bff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6d67fc34,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4d55fc17,
0x43b56a96,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x838b4409,
0xffffffff,
0x614e5fff,
0x0500701c,
0x9817ffff,
0xffffffff,
0x818b4009,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x624e8417,
0xffffffff,
0x0054701c,
0xffffffff,
0x1dc18c0d,
0xffffffff,
0x0a045c17,
0xffffffff,
0x9495ffff,
0xffffffff,
0x110a741d,
0xffffffff,
0xffffffff,
0x98bfffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x01607045,
0x41b56a8e,
0xffffffff,
0xffffffff,
0x2053fc1a,
0x35408000,
0x5e4bfc17,
0x1bc18c09,
0x0e4e7417,
0xffffffff,
0xffffffff,
0xffffffff,
0x3013141b,
0xffffffff,
0x25b45ed3,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x730dffff,
0x66448817,
0xffffffff,
0x10407400,
0xffffffff,
0x42b56aae,
0xffffffff,
0x64448417,
0x5f51fc21,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x31106fff,
0xffffffff,
0x8d8bffff,
0xffffffff,
0x1100741d,
0xffffffff,
0xffffffff,
0x49b5ffff,
0xffffffff,
0xffffffff,
0x064e5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c54741d,
0x2db873ff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3c56bc1c,
0x888a600e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x09405c00,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7303ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7157ffff,
0x6c66d3ff,
0x98b20000,
0x7987fc00,
0x2eb85fff,
0xffffffff,
0x6866cfff,
0xffffffff,
0xffffffff,
0xffffffff,
0x19abffff,
0xffffffff,
0xffffffff,
0x06445c17,
0xffffffff,
0xffffffff,
0x5d47fc1d,
0xffffffff,
0x076e5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x02647017,
0x858a6000,
0xffffffff,
0x5855fc2a,
0xffffffff,
0x545a5fff,
0x050c701c,
0xffffffff,
0x27b475d6,
0x43b56a76,
0xffffffff,
0xffffffff,
0xffffffff,
0x615077ff,
0xffffffff,
0xffffffff,
0x6a50a017,
0x8477ffff,
0xffffffff,
0xffffffff,
0x31105c17,
0x69468fff,
0x98a1ffff,
0x326ad401,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8c8bfc0f,
0x5157fc17,
0x6756ac1d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6b66cc17,
0xffffffff,
0xffffffff,
0x41b56a6e,
0xffffffff,
0x7c7a63ff,
0x61505fff,
0x0502701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7443ffff,
0xffffffff,
0x62508417,
0xffffffff,
0x0056701c,
0x25b45eb3,
0x716dffff,
0xffffffff,
0x0a065c17,
0xffffffff,
0x9597ffff,
0xffffffff,
0x110c741d,
0xffffffff,
0x92af4400,
0x98c1ffff,
0x2053fc18,
0xffffffff,
0x065a5c17,
0x848bfc07,
0x92af4000,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5e4dfc17,
0x0e507417,
0xffffffff,
0xffffffff,
0xffffffff,
0x3652bfff,
0x76113818,
0xffffffff,
0xffffffff,
0x66468c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x730fffff,
0xffffffff,
0xffffffff,
0x43b56a95,
0xffffffff,
0xffffffff,
0xffffffff,
0x898a6010,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x31126fff,
0xffffffff,
0x908dffff,
0xffffffff,
0x1102741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x06505c17,
0xffffffff,
0xffffffff,
0x4f53fc1d,
0x0c56741d,
0x4ab6a81c,
0xffffffff,
0x5b43fc17,
0xffffffff,
0x3c58bc1c,
0xffffffff,
0x4ab6a41c,
0x4b6dfc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x48b4ae96,
0x7305ffff,
0x2cb472ce,
0x2053fc19,
0xffffffff,
0xffffffff,
0x48b4aa96,
0xffffffff,
0x5f49fc21,
0x6e15fc29,
0xffffffff,
0x6868d3ff,
0x48b4a696,
0x7a89fc00,
0xffffffff,
0xffffffff,
0xffffffff,
0x6c68cfff,
0x3f5c73ff,
0xffffffff,
0xffffffff,
0x1aadffff,
0xffffffff,
0xffffffff,
0x06465c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x07705c17,
0xffffffff,
0xffffffff,
0x898a6011,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6542881d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6742841d,
0x050e701c,
0xffffffff,
0xffffffff,
0xffffffff,
0x6652a417,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0062701c,
0x9879ffff,
0xffffffff,
0xffffffff,
0x31125c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x24b45e6f,
0x4ab4aaae,
0x21b6701c,
0xffffffff,
0x0c42741d,
0x06665c17,
0xffffffff,
0x4ab4a6ae,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6b68d017,
0x23b45dd4,
0xffffffff,
0xffffffff,
0xffffffff,
0x355ebfff,
0xffffffff,
0x045c7017,
0xffffffff,
0xffffffff,
0xffffffff,
0x7c7c63ff,
0xffffffff,
0x0504701c,
0xffffffff,
0x47b5fed3,
0x3855fc1c,
0xffffffff,
0xffffffff,
0x7445ffff,
0x604877ff,
0xffffffff,
0xffffffff,
0x0058701c,
0x556fffff,
0x18ab5056,
0xffffffff,
0x0a085c17,
0x5955fc29,
0x9699ffff,
0x120bfc1d,
0x110e741d,
0x26b475d5,
0x43b56a75,
0x98c3ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5e4ffc17,
0xffffffff,
0xffffffff,
0x6a489017,
0x2ab4728e,
0x16813bff,
0x76133818,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x60485fff,
0xffffffff,
0x7211ffff,
0xffffffff,
0x8c8bfc0e,
0xffffffff,
0x17bd8c00,
0x1f526817,
0xffffffff,
0x62488417,
0xffffffff,
0xffffffff,
0xffffffff,
0x1f526417,
0xffffffff,
0xffffffff,
0x48b4ae76,
0x8e8fffff,
0x2bb472ae,
0x1104741d,
0x1e526017,
0xffffffff,
0x48b4aa76,
0x5754abff,
0xffffffff,
0x06525c17,
0x7e7743ff,
0x8b8b4c0f,
0x5055fc1d,
0x48b4a676
};

#define fold_hashkey(k)	(lj_rol(lj_rol((k),30)-(k),25)%949)

